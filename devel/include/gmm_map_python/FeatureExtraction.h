// Generated by gencpp from file gmm_map_python/FeatureExtraction.msg
// DO NOT EDIT!


#ifndef GMM_MAP_PYTHON_MESSAGE_FEATUREEXTRACTION_H
#define GMM_MAP_PYTHON_MESSAGE_FEATUREEXTRACTION_H

#include <ros/service_traits.h>


#include <gmm_map_python/FeatureExtractionRequest.h>
#include <gmm_map_python/FeatureExtractionResponse.h>


namespace gmm_map_python
{

struct FeatureExtraction
{

typedef FeatureExtractionRequest Request;
typedef FeatureExtractionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FeatureExtraction
} // namespace gmm_map_python


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gmm_map_python::FeatureExtraction > {
  static const char* value()
  {
    return "31cd19eee6b183891282c4389a5aa49f";
  }

  static const char* value(const ::gmm_map_python::FeatureExtraction&) { return value(); }
};

template<>
struct DataType< ::gmm_map_python::FeatureExtraction > {
  static const char* value()
  {
    return "gmm_map_python/FeatureExtraction";
  }

  static const char* value(const ::gmm_map_python::FeatureExtraction&) { return value(); }
};


// service_traits::MD5Sum< ::gmm_map_python::FeatureExtractionRequest> should match
// service_traits::MD5Sum< ::gmm_map_python::FeatureExtraction >
template<>
struct MD5Sum< ::gmm_map_python::FeatureExtractionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_map_python::FeatureExtraction >::value();
  }
  static const char* value(const ::gmm_map_python::FeatureExtractionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_map_python::FeatureExtractionRequest> should match
// service_traits::DataType< ::gmm_map_python::FeatureExtraction >
template<>
struct DataType< ::gmm_map_python::FeatureExtractionRequest>
{
  static const char* value()
  {
    return DataType< ::gmm_map_python::FeatureExtraction >::value();
  }
  static const char* value(const ::gmm_map_python::FeatureExtractionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gmm_map_python::FeatureExtractionResponse> should match
// service_traits::MD5Sum< ::gmm_map_python::FeatureExtraction >
template<>
struct MD5Sum< ::gmm_map_python::FeatureExtractionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_map_python::FeatureExtraction >::value();
  }
  static const char* value(const ::gmm_map_python::FeatureExtractionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_map_python::FeatureExtractionResponse> should match
// service_traits::DataType< ::gmm_map_python::FeatureExtraction >
template<>
struct DataType< ::gmm_map_python::FeatureExtractionResponse>
{
  static const char* value()
  {
    return DataType< ::gmm_map_python::FeatureExtraction >::value();
  }
  static const char* value(const ::gmm_map_python::FeatureExtractionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GMM_MAP_PYTHON_MESSAGE_FEATUREEXTRACTION_H
